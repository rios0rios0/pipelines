stages:
  - stage: Build
    displayName: Build and push stage
    condition: and(not(failed()), or(startsWith(variables['Build.SourceBranch'], 'refs/tags/'), startsWith(variables['Build.SourceBranch'], 'refs/heads/main')))
    jobs:
      - job: Build
        displayName: Build job
        variables:
          GOPATH: "$(Pipeline.Workspace)/.go"
          DOCKER_CACHE_DIR: '$(Agent.TempDirectory)/docker-cache'
        steps:
          - template: '../../abstracts/go1.23.4.yaml'

          #TODO: create a template for this
          - script: |
              set -e
              mkdir -p build_output
              CGO_ENABLED=0 GOOS=linux GOARCH=$(uname -m | sed 's/x86_64/amd64/;s/aarch64/arm64/') go build -o build_output/main ./cmd
            displayName: "Build Go Application"

          - template: '../../../global/abstracts/docker.yaml'
            parameters:
              DOCKER_FILE: './Dockerfile'
              DOCKER_CACHE_DIR: '$(DOCKER_CACHE_DIR)'
              CONTAINER_REGISTRY_SERVER: '$(CONTAINER_REGISTRY_SERVER)'
              CONTAINER_REGISTRY_SERVICE_CONNECTION: '$(CONTAINER_REGISTRY_SERVICE_CONNECTION)'

      - template: '../../../global/stages/40-delivery/release.yaml'
