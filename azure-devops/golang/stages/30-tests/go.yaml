stages:
  - stage: 'tests'
    displayName: 'tests'
    condition: and(succeeded(), not(startsWith(variables['Build.SourceBranch'], 'refs/tags/')))
    jobs:
      - job: 'test_all'
        displayName: 'test:all'
        variables:
          GOPATH: "$(Pipeline.Workspace)/.go"
        steps:
          - task: 'Cache@2'
            inputs:
              key: "$(Agent.JobName)|$(Agent.OS)|go.sum"
              path: "$(GOPATH)"
            displayName: 'Cache for Go modules'
            continueOnError: true

          - template: '../../../global/abstracts/scripts-repo.yaml'
          - script: $(Scripts.Directory)/global/scripts/golang/init/run.sh
            displayName: 'Load Custom Configuration'

          - task: 'GoTool@0'
            inputs:
              version: '1.23.4'
              architecture: 'amd64'
              goArguments: 'mod tidy'

          - script: $(Scripts.Directory)/global/scripts/golang/test/run.sh
            displayName: 'Run Tests'

          - task: 'PublishTestResults@2'
            inputs:
              testResultsFormat: 'JUnit'
              testResultsFiles: '**/junit.xml'
            displayName: 'Publish Test Results'

          - task: 'PublishCodeCoverageResults@2'
            inputs:
              summaryFileLocation: 'cobertura.xml'
            displayName: 'Publish Code Coverage Results'

          - task: 'PublishPipelineArtifact@1'
            inputs:
              targetPath: "$(System.DefaultWorkingDirectory)/coverage.txt"
              artifact: 'coverage'
            displayName: 'Publish Coverage File'
        continueOnError: false
