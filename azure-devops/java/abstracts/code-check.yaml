parameters:
  - name: 'GRADLE_TEST_TASKS'
    type: 'object'
    default: []
  - name: 'GRADLE_PROPERTIES'
    type: 'object'
    default: []

jobs:
  - job: 'style_spotless'
    displayName: 'style:spotless'
    steps:
      - template: 'gradle.yaml'
        parameters:
          GRADLE_PROPERTIES: ${{ parameters.GRADLE_PROPERTIES }}

      - task: 'Gradle@3'
        inputs:
          tasks: 'spotlessCheck'
          ${{ if gt(length(parameters.GRADLE_TEST_TASKS), 0) }}:
            options: "-x ${{ join(' -x ', parameters.GRADLE_TEST_TASKS) }}"
          publishJUnitResults: false
        displayName: 'Spotless Check'

  - job: 'style_checkstyle'
    displayName: 'style:checkstyle'
    steps:
      - template: '../../global/abstracts/scripts-repo.yaml'
      - template: 'gradle.yaml'
        parameters:
          GRADLE_PROPERTIES:
            - ${{ each prop in parameters.GRADLE_PROPERTIES }}:
                - ${{ prop }}
            - "checkstyleConfigFile=$(Scripts.Directory)/global/configs/java/checkstyle/google-checkstyle10.12.4.xml"

      - task: 'Gradle@3'
        inputs:
          tasks: 'checkstyleMain'
          ${{ if gt(length(parameters.GRADLE_TEST_TASKS), 0) }}:
            options: "-x ${{ join(' -x ', parameters.GRADLE_TEST_TASKS) }} --stacktrace"
          publishJUnitResults: false
        displayName: 'Checkstyle'

  - job: 'quality_pmd'
    displayName: 'quality:pmd'
    steps:
      - template: 'gradle.yaml'
        parameters:
          GRADLE_PROPERTIES: ${{ parameters.GRADLE_PROPERTIES }}

      - task: 'Gradle@3'
        inputs:
          tasks: 'pmdMain'
          ${{ if gt(length(parameters.GRADLE_TEST_TASKS), 0) }}:
            options: "-x ${{ join(' -x ', parameters.GRADLE_TEST_TASKS) }}"
          publishJUnitResults: false
        displayName: 'PMD'
