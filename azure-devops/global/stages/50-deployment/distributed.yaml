parameters:
  - name: 'CUSTOMER_ID'
    type: 'string'
    default: ''

jobs:
  - job: 'delivery'
    displayName: 'delivery distributed app' 
    steps:
      - task: 'AzureCLI@2'
        inputs:
          azureSubscription: "$(AZM_SERVICE_CONNECTION)"
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: |
            set -e
            resourceGroupName=$(ENVIRONMENT)-rg-$(CUSTOMER_ID)-$(AZM_LOCATION)
            echo "##vso[task.setvariable variable=resourceGroupName]$resourceGroupName"
            resourceGroupExists=$(az group exists --name $resourceGroupName)
            echo "##vso[task.setvariable variable=resourceGroupExists]$resourceGroupExists"
        displayName: 'Check if Resource Group Exists'
      
      - task: 'AzureCLI@2'
        inputs:
          azureSubscription: "$(AZM_SERVICE_CONNECTION)"
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: |
            set -e
            outboundIpAddresses="''"
            if [ "$resourceGroupExists" = true ]; then
              functionAppName=$(az functionapp list --resource-group $resourceGroupName --query "[].name" --output tsv | tail -n 1)
              if [ -n "$functionAppName" ]; then
                outboundIpAddresses=$(az webapp show --resource-group $resourceGroupName --name $functionAppName --query outboundIpAddresses --output tsv)
              fi
            fi
            echo "##vso[task.setvariable variable=outboundIpAddresses]$outboundIpAddresses"
        displayName: 'Getting Function Outbound IP Addresses'

      - task: 'AzureResourceGroupDeployment@2'
        inputs:
          location: "$(AZM_LOCATION)"
          action: 'Update Resource Group'
          azureSubscription: "$(AZM_SERVICE_CONNECTION)"
          resourceGroupName: "$(resourceGroupName)"
          csmFile: 'azuredeploy.json'
          overrideParameters: "-location $(AZM_LOCATION) -environment $(ENVIRONMENT) -functionAppName $(AZM_FUNCTION_NAME) -inboundAllowedIps $(INBOUND_ALLOWED_IPS) -oldOutboundIpAddresses $(outboundIpAddresses) -keyVaultName $(CUSTOMER_KEY_VAULT_NAME)"
          templateLocation: 'Linked artifact'
          deploymentMode: 'Incremental'
          deploymentOutputs: 'AZURE_DEPLOY_OUTPUTS'
        displayName: 'Deploy Resource Group'
        condition: and(succeeded(), eq(variables['AZURE_DEPLOY_CACHE_HIT'], 'false'))