stages:
  - stage: 'delivery'
    displayName: 'delivery'
    condition: or(eq(variables['Build.SourceBranch'], 'refs/heads/main'), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
    jobs:
      - job: 'delivery'
        displayName: 'delivery'
        variables:
          DOCKER_CACHE_DIR: '$(Agent.TempDirectory)/docker-cache'
        steps:
          - template: '../../abstracts/execute-command-opensearch-dashboards.yaml'
            parameters:
              TAG_NAME: '2.18.0'
              PLUGIN_NAME: 'app'
              COMMANDS: 'yarn build'
              ARTIFACT_NAME: 'build'
              ARTIFACT_PATH: 'build'

          - task: 'Cache@2'
            inputs:
              key: "$(Agent.JobName)|$(Build.SourcesDirectory)/.ci/40-delivery/app.Dockerfile"
              path: "$(DOCKER_CACHE_DIR)"
            displayName: 'Cache Docker Buildx'
            continueOnError: true

          - task: 'DownloadBuildArtifacts@0'
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'build'
              downloadPath: '.'

          - task: 'Docker@2'
            inputs:
              command: 'login'
              containerRegistry: "$(DOCKER_REGISTRY_ENDPOINT)"
            displayName: 'Docker Login'

          - script: |
              set -e

              docker buildx create --use

              TAGS="$(DOCKER_CONTAINER_IMAGE):latest"
              if [[ "$(Build.SourceBranch)" == refs/tags/* ]]; then
                TAGS="$TAGS -t $(DOCKER_CONTAINER_IMAGE):$(Build.SourceBranchName)"
                echo "##vso[task.setvariable variable=DOCKER_CONTAINER_TAG;isOutput=true]$(Build.SourceBranchName)"
              else
                echo "##vso[task.setvariable variable=DOCKER_CONTAINER_TAG;isOutput=true]latest"
              fi

              docker buildx build --platform linux/amd64,linux/arm64 \
                --cache-from=type=local,src=$(DOCKER_CACHE_DIR) \
                --cache-to=type=local,dest=$(DOCKER_CACHE_DIR),mode=max \
                --file .ci/40-delivery/app.Dockerfile --tags $TAGS --push .
            name: 'build'
            displayName: 'Docker Build and Push'
        continueOnError: false
      - template: '../../../global/stages/40-delivery/release.yaml'
