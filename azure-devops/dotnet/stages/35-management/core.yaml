stages:
  - stage: 'management'
    displayName: 'management'
    condition: and(succeeded(), not(startsWith(variables['Build.SourceBranch'], 'refs/tags/')))
    jobs:
      - job: 'report_sonarqube'
        displayName: 'report:sonarqube'
        variables:
          SONAR_USER_HOME: "$(Build.SourcesDirectory)/.sonar"
        steps:
          - checkout: 'self'
            fetchDepth: 0
            fetchTags: true

          - template: '../../abstracts/core-sdk6.x.yaml'

          - task: 'Cache@2'
            inputs:
              key: "$(Agent.JobName)|sonar"
              path: "$(SONAR_USER_HOME)"
            displayName: 'Cache for SonarQube'
            continueOnError: true

          - task: 'DownloadPipelineArtifact@2'
            inputs:
              artifactName: 'coverage'
              targetPath: "$(Build.SourcesDirectory)/coverage"
            displayName: 'Download Coverage File'

          # TODO: repeated with GitLab CI, please create shell script
          - script: |
              apt-get update && apt-get install --no-install-recommends -y openjdk-17-jre
              export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
              export PATH=$JAVA_HOME/bin:$PATH
              dotnet tool install --global dotnet-sonarscanner
              dotnet sonarscanner begin /name:"$SONAR_PROJECT_NAME" /key:"$SONAR_PROJECT_KEY"
                /d:sonar.host.url="$SONAR_HOST_URL" /d:sonar.token="$SONAR_TOKEN"
                /d:sonar.qualitygate.wait="true" /d:sonar.coverage.exclusions="Tests/**"
              dotnet build $SLN_FILE
              dotnet sonarscanner end /d:sonar.token="$SONAR_TOKEN"
            continueOnError: true

      - job: 'report_dependency_track'
        displayName: 'report:dependency-track'
        variables:
          REPORT_PATH: 'build/reports'
        steps:
          # TODO: repeated with GitLab CI, please create shell script
          - script: |
              dotnet tool install --global CycloneDX
              dotnet CycloneDX $SLN_FILE -o "$PREFIX$REPORT_PATH" --json -rs

          - template: '../../global/abstracts/scripts-repo.yaml'
          - script: $(Scripts.Directory)/global/scripts/dependency-track/run.sh
        continueOnError: true
