name: 'Binary Build'
description: 'Build Go binary for single platform'

inputs:
  binary_name:
    type: 'string'
    description: 'Binary name to be used as default source'
    required: true
  github_token:
    type: 'string'
    description: 'GitHub token for creating releases'
    required: true

runs:
  using: 'composite'
  steps:
    - uses: 'actions/checkout@v4'
    
    - uses: 'actions/setup-go@v5'
      with:
        go-version: '1.22'
    
    - name: 'Set package name'
      shell: 'bash'
      run: |
        echo "PACKAGE_NAME=$(echo '${{ inputs.binary_name }}-${{ github.ref }}' | sed 's/refs\/tags\///')" >> $GITHUB_ENV
    
    - name: 'Build binary'
      shell: 'bash'
      run: |
        mkdir -p bin
        go build -o bin/${{ inputs.binary_name }} ./cmd/${{ inputs.binary_name }}
        strip -s bin/${{ inputs.binary_name }} || true
    
    - name: 'Create archive'
      shell: 'bash'
      run: |
        cd bin
        zip -9 $PACKAGE_NAME.zip ${{ inputs.binary_name }}
    
    - name: 'Create release and upload asset'
      shell: 'bash'
      env:
        GITHUB_TOKEN: '${{ inputs.github_token }}'
      run: |
        # Create release if it doesn't exist
        TAG_NAME=$(echo '${{ github.ref }}' | sed 's/refs\/tags\///')
        
        # Check if release exists
        if ! gh release view "$TAG_NAME" >/dev/null 2>&1; then
          gh release create "$TAG_NAME" --title "Release $TAG_NAME" --notes "Release $TAG_NAME"
        fi
        
        # Upload asset
        gh release upload "$TAG_NAME" "bin/$PACKAGE_NAME.zip" --clobber
