.sonarqube:
  image:
    name: 'sonarsource/sonar-scanner-cli:latest'
    entrypoint: [ '' ]
  stage: 'management'
  variables:
    GIT_DEPTH: '0' # tells git fetching all the branches of the project, required by the analysis task
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar" # defines the location of the analysis task cache
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - '.sonar/cache'
    when: 'always'
  script:
    - sonar-scanner
  tags:
    - 'dev-gitlab-runner-onprem'
  allow_failure: true
  rules: # TODO: this could be not duplicated using !reference
    - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH"

.dependency-track:
  stage: 'management'
  script:
    - 'export REQUEST_CONTENT_TYPE="Content-Type: multipart/form-data"'
    - 'export REQUEST_API_KEY="X-Api-Key: $DEPENDENCY_TRACK_TOKEN"'
    - curl --fail --request 'POST' "$DEPENDENCY_TRACK_HOST_URL/api/v1/bom"
      -H "$REQUEST_CONTENT_TYPE" -H "$REQUEST_API_KEY"
      -F "projectName=$(cat $PREFIX$REPORT_PATH/bom.json | jq -r '.metadata.component.name')"
      -F "projectVersion=$(cat $PREFIX$REPORT_PATH/bom.json | jq -r '.metadata.component.version')"
      -F 'autoCreate=true' -F "bom=@$PREFIX$REPORT_PATH/bom.json"
  tags:
    - 'dev-gitlab-runner-onprem'
  allow_failure: true
  rules: # TODO: this could be not duplicated using !reference
    - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH"
