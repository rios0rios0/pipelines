parameters:
  - name: 'SELF_HOSTED_POOL' # optional parameter for heavy workloads within JS language
    type: 'string'
    default: "$(SELF_HOSTED_POOL)"
  - name: 'RUN_BEFORE_TESTS'
    type: 'string'
    default: 'echo "No before script"'
  - name: 'RUN_AFTER_TESTS'
    type: 'string'
    default: 'echo "No after script"'

stages:
  - stage: 'tests'
    displayName: 'tests'
    condition: and(succeeded(), not(startsWith(variables['Build.SourceBranch'], 'refs/tags/')))
    jobs:
      - job: 'test_all'
        displayName: 'test:all'
        steps:
          - script: |
              ${{ parameters.RUN_BEFORE_TESTS }}
            displayName: 'Run Before'

          - script: yarn test:coverage

          - script: |
              ${{ parameters.RUN_AFTER_TESTS }}
            displayName: 'Run After'

          - task: 'PublishTestResults@2'
            inputs:
              testResultsFormat: 'JUnit'
              testResultsFiles: '**/junit.xml'
            displayName: 'Publish Test Results'

          - task: 'PublishCodeCoverageResults@2'
            inputs:
              summaryFileLocation: 'cobertura.xml'
            displayName: 'Publish Code Coverage Results'

      - job: 'test_e2e'
        displayName: 'test:e2e'
        continueOnError: true
        ${{ if ne(parameters.SELF_HOSTED_POOL, '') }}:
          pool:
            name: "${{ parameters.SELF_HOSTED_POOL }}"
        steps:
          - script: |
              ${{ parameters.RUN_BEFORE_TESTS }}
            displayName: 'Run Before'

          - script: yarn cy:parallel

          - script: |
              ${{ parameters.RUN_AFTER_TESTS }}
            displayName: 'Run After'

          - task: 'PublishTestResults@2'
            inputs:
              testResultsFormat: 'JUnit'
              testResultsFiles: '**/junit.xml'
            displayName: 'Publish Test Results'

          - task: 'PublishCodeCoverageResults@2'
            inputs:
              summaryFileLocation: 'cobertura.xml'
            displayName: 'Publish Code Coverage Results'
