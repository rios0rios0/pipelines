parameters:
  - name: 'DOCKER_FILE'
    type: 'string'
  - name: 'DOCKER_CACHE_DIR'
    type: 'string'
  - name : 'CONTAINER_REGISTRY_SERVER'
    type: 'string'
  - name: 'CONTAINER_REGISTRY_SERVICE_CONNECTION'
    type: 'string'
  - name: 'DOCKER_BUILD_ARGS'
    type: 'string'
    default: ''
  - name: 'RUN_BEFORE_BUILD'
    type: 'string'
    default: ''

steps:
  - task: 'Cache@2'
    inputs:
      key: "$(Agent.JobName)|${{ parameters.DOCKER_FILE }}"
      path: "${{ parameters.DOCKER_CACHE_DIR }}"
    displayName: 'Cache Docker Buildx'
    continueOnError: true

  - task: 'Docker@2'
    displayName: 'Docker Login'
    inputs:
      containerRegistry: "${{ parameters.CONTAINER_REGISTRY_SERVICE_CONNECTION }}"
      command: 'login'

  - script: |
        imageName="${{ parameters.CONTAINER_REGISTRY_SERVER }}/$(Build.Repository.Name)"

        TAGS="$imageName:latest"
        if [[ "$(Build.SourceBranch)" == refs/tags/* ]]; then
          TAGS="$TAGS -t $imageName:$(Build.SourceBranchName)"
          containerImageTagName="$imageName:$(Build.SourceBranchName)"
        else
          containerImageTagName="$TAGS"
        fi

        echo "##vso[task.setvariable variable=CONTAINER_IMAGE;isOutput=true]$containerImageTagName"

        ${{ parameters.RUN_BEFORE_BUILD }}

        docker buildx create --use
        docker buildx build ${{ parameters.DOCKER_BUILD_ARGS }} \
          --platform linux/amd64,linux/arm64 \
          --tag $TAGS \
          --cache-from=type=local,src=${{ parameters.DOCKER_CACHE_DIR }} \
          --cache-to=type=local,dest=${{ parameters.DOCKER_CACHE_DIR }},mode=max \
          --file ${{ parameters.DOCKER_FILE }} \
          --push .
    name: 'build'
    displayName: 'Build and Push Docker Image'
