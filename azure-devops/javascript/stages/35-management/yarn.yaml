stages:
  - stage: 'management'
    condition: not(startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
    displayName: 'management'
    jobs:
      - job: 'report_sonarqube'
        displayName: 'report:sonarqube'
        variables:
          SONAR_USER_HOME: "$(Build.SourcesDirectory)/.sonar"
        steps:
          - task: 'UseNode@1'
            inputs:
              version: '18.19.0'
            displayName: 'Use Node.js 18.19.0'

          - script: |
              corepack enable
              corepack prepare yarn@stable --activate
            displayName: 'Install Yarn'

          - task: 'Cache@2'
            inputs:
              key: "$(Agent.JobName)"
              path: 'node_modules'
            displayName: 'Using cache for node_modules'

          - task: 'DownloadPipelineArtifact@2'
            inputs:
              artifactName: 'coverage'
              targetPath: '$(Build.SourcesDirectory)/coverage'
            displayName: 'Download Coverage File'

          - task: 'Cache@2'
            inputs:
              key: "$(Agent.JobName)-2"
              path: "$(SONAR_USER_HOME)"

          - script: |
              sed -i "s/\"extends\": \"\.\.\/\.\.\/tsconfig\.json\",/ /g" tsconfig.json
              yarn && yarn sonar

      - job: 'report_dependency_track'
        displayName: 'report:dependency-track'
        # TODO: this is being repeated all over the place
        variables:
          PREFIX: ''
          REPORT_PATH: 'build/reports'
        steps:
          - task: 'UseNode@1'
            inputs:
              version: '18.19.0'
            displayName: 'Use Node.js 18.19.0'

          - script: |
              corepack enable
              corepack prepare yarn@stable --activate
            displayName: 'Install Yarn'

          - task: 'Cache@2'
            inputs:
              key: "$(Agent.JobName)"
              path: 'node_modules'
            displayName: 'Using cache for node_modules'

          - template: '../../../global/stages/35-management/dependency-track.yaml'
            parameters:
              # TODO: duplicated code with GitLab pipelines
              BEFORE_SCRIPT: |
                yarn && yarn sbom
                # TODO: this is not required in Azure DevOps
                # apt update && apt install -y --no-install-recommends curl jq
