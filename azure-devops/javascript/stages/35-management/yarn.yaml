stages:
  - stage: 'management'
    displayName: 'management'
    condition: and(succeeded(), not(startsWith(variables['Build.SourceBranch'], 'refs/tags/')))
    jobs:
      - job: 'report_sonarqube'
        displayName: 'report:sonarqube'
        variables:
          SONAR_USER_HOME: "$(Build.SourcesDirectory)/.sonar"
        steps:
          - checkout: 'self'
            fetchDepth: 0
            fetchTags: true

          - template: '../../abstracts/corepack-node18.19.0.yaml'

          - task: 'Cache@2'
            inputs:
              key: "$(Agent.JobName)|$(SONAR_USER_HOME)"
              path: "$(SONAR_USER_HOME)"
            displayName: 'Cache for SonarQube'
            continueOnError: true

          - task: 'DownloadPipelineArtifact@2'
            inputs:
              artifactName: 'coverage'
              targetPath: "$(Build.SourcesDirectory)/coverage"
            displayName: 'Download Coverage File'

          - script: |
              sed -i "s/\"extends\": \"\.\.\/\.\.\/tsconfig\.json\",/ /g" tsconfig.json
              yarn && yarn sonar

      - job: 'report_dependency_track'
        displayName: 'report:dependency-track'
        variables:
          REPORT_PATH: 'build/reports'
        steps:
          - template: '../../abstracts/corepack-node18.19.0.yaml'

          - script: yarn && yarn sbom

          - template: '../../../global/abstracts/scripts-repo.yaml'
          - script: $(Scripts.Directory)/global/scripts/dependency-track/run.sh
        continueOnError: true
