release:
  image: alpine:latest
  stage: delivery
  before_script:
    - apk add --no-cache curl git jq
  script:
    - |
      set -eux
      if echo "$CI_COMMIT_MESSAGE" | grep -Eq "^Merge branch 'chore/bump-([0-9]+\.[0-9]+\.[0-9]+)' into '[^']*'$"; then
          VERSION=$(echo "$CI_COMMIT_MESSAGE" | sed -n "s/^Merge branch 'chore\/bump-\(.*\)' into '[^']*'$/\1/p")

          RELEASE_NOTES=""
          if [ -f CHANGELOG.md ]; then
              RELEASE_NOTES=$(awk '/## \[Unreleased\]/ {skip=1; next} skip && /## \[.*\]/ {found=1; skip=0; next} found && /## \[.*\]/ {exit} found {print}' CHANGELOG.md)
              RELEASE_NOTES=$(echo "$RELEASE_NOTES" | jq --raw-input --slurp .)
          fi

          DATA="{
            \"name\": \"Release $VERSION\",
            \"tag_name\": \"$VERSION\",
            \"description\": $RELEASE_NOTES,
            \"ref\": \"$CI_COMMIT_SHA\"
          }"

          curl -XPOST "$CI_API_V4_URL/projects/$CI_PROJECT_ID/releases" \
               --header "JOB-TOKEN: $CI_JOB_TOKEN" \
               --header "Content-Type: application/json" \
               --data "$DATA"
      else
          echo 'Commit is not a bump, not creating a release'
      fi
  rules:
    - if: '$CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH && $CI_COMMIT_MESSAGE =~ /chore\/bump-[0-9]+\.[0-9]+\.[0-9]+/'
      when: always
    - when: never
